using System;
using System.IO;
using OS.Devices;
using OS.FileSystems;

namespace GameplaySystems.Hacking
{
	public class CraftedExploitFile : IFileEntry
	{
		/// <inheritdoc />
		public string Name { get; set; }

		public ExploitAsset Exploit { get; set; }
		public PayloadAsset Payload { get; set; }

		/// <inheritdoc />
		public IDirectoryEntry Parent => null;

		/// <inheritdoc />
		public bool CanExecute => Exploit != null;

		/// <inheritdoc />
		public bool TryDelete(IUser user)
		{
			return false;
		}

		/// <inheritdoc />
		public bool TryOpenRead(IUser user, out Stream stream)
		{
			stream = Stream.Null;
			return false;
		}

		/// <inheritdoc />
		public bool TryOpenWrite(IUser user, out Stream stream)
		{
			stream = Stream.Null;
			return false;
		}

		/// <inheritdoc />
		public bool TryOpenWriteAppend(IUser user, out Stream stream)
		{
			stream = Stream.Null;
			return false;
		}

		/// <inheritdoc />
		public bool TryExecute(ISystemProcess process, ITextConsole console, string[] arguments)
		{
			return false;
		}
	}
}